# –∏–º–ø–æ—Ä—Ç—ã –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton

# –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã
from loader import dp

# –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
menu = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
# —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
couples = KeyboardButton('üóì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–∞—Ä üóì')
bells = KeyboardButton('‚è≥ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤ ‚è≥')
videcam = KeyboardButton('üì∏ –ß–≠–Ω–ö –û–Ω–ª–∞–π–Ω üì∏')
support = KeyboardButton('‚ú® –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ‚ú®')
# about = KeyboardButton('ü§ñ –û –±–æ—Ç–µ ü§ñ')
# –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
menu.add(couples, bells, videcam, support)


# —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message_handler(commands=['start'])
async def welcome(message: Message):
    text = 'üëã <b>–ü—Ä–∏–≤–µ—Ç!</b> üëã\n' \
           'ChenkBot –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –±—ã—Å—Ç—Ä–æ —É–∑–Ω–∞–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ ' \
           '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–∞—Ä –∏ –∑–≤–æ–Ω–∫–æ–≤. –ë–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ —Ç—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –∏ –∑–∞—Ö–æ–¥–∏—Ç—å –Ω–∞ ' \
           '—Å–∞–π—Ç –ß–≠–Ω–ö–∞ –∏–ª–∏ —Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å—Ç—ç–Ω–¥–µ.'
    await message.answer(text=text, reply_markup=menu)


@dp.message_handler(text='üîô –ù–∞–∑–∞–¥ üîô')
async def back(message: Message):
    if message.text == 'üîô –ù–∞–∑–∞–¥ üîô':
        await message.answer('–ß—Ç–æ-—Ç–æ –µ—â—ë?', reply_markup=menu)
